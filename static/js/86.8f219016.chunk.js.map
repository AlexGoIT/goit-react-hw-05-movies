{"version":3,"file":"static/js/86.8f219016.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { NavLink, Link } from 'react-router-dom';\nimport { BsFilm } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 8px 0;\n  margin: 8px 0;\n  display: flex;\n  gap: 16px;\n  border-top: 2px solid #c2c2c2;\n  border-bottom: 2px solid #c2c2c2;\n`;\n\nexport const Thumb = styled.div`\n  min-width: 260px;\n  min-height: 360px;\n  margin-right: 20px;\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Poster = styled.img`\n  max-width: 260px;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n  background-color: bisque;\n`;\n\nexport const NoPoster = styled(BsFilm)`\n  width: calc(100% - 150px);\n  height: auto;\n  object-fit: cover;\n  color: #c2c2c2;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const MovieScoreWrapper = styled.div`\n  padding: 16px 0;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const MovieScore = styled.p`\n  margin-right: 4px;\n  font-size: 18px;\n`;\n\nexport const MovieSubTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const MovieReview = styled.p`\n  margin-bottom: 16px;\n  text-align: justify;\n`;\n\nexport const MovieGenre = styled.p``;\n\nexport const StyledLink = styled(Link)`\n  max-width: 100px;\n  padding: 4px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: rgb(240, 240, 240);\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 500;\n  color: blue;\n\n  &.active {\n    color: tomato;\n  }\n`;\n","import styled from 'styled-components';\nimport { BsFilm } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  /* max-width: 288px; */\n  min-width: calc(100% / 5 - 10px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n\n  &:hover img {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n  transition: transform 0.2s ease-in-out;\n`;\n\nexport const NoPoster = styled(BsFilm)`\n  width: 60%;\n  height: auto;\n  object-fit: cover;\n  color: #c2c2c2;\n`;\n\nexport const Title = styled.p`\n  padding: 8px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import { NoPoster } from 'components/MovieDetails/MovieDetails.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, StyledLink, Thumb, Poster, Title } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { poster_path } = movie;\n  const imgSrc = poster_path\n    ? `https://image.tmdb.org/t/p/w342${poster_path}`\n    : '';\n\n  const title = movie.title ?? movie.name;\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <Thumb>\n          {imgSrc ? (\n            <Poster src={imgSrc} alt={title} loading=\"lazy\" />\n          ) : (\n            <NoPoster />\n          )}\n        </Thumb>\n        <Title>{title}</Title>\n      </StyledLink>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 288px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 32px 16px;\n\n  @media (min-width: 475px) {\n    max-width: 600px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 768px) {\n    max-width: 900px;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media (min-width: 1024px) {\n    max-width: 100%;\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport MovieItem from '../MovieItem';\nimport { List } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport Pagination from '@mui/material/Pagination';\n\nexport const PaginationWrapper = styled.div`\n  width: 100%;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledPagination = styled(Pagination)``;\n","import { PaginationWrapper, StyledPagination } from './Pagination.styled';\n\nexport default function Pagination({ count, onChange }) {\n  return (\n    <PaginationWrapper>\n      <StyledPagination\n        count={count}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={onChange}\n      />\n    </PaginationWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 4px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  height: 22px;\n  padding: 4px;\n  border-radius: 4px 0 0 4px;\n  border: 1px solid #c2c2c2;\n  border-right: none;\n  outline: none;\n`;\n\nexport const SearchButton = styled.button`\n  height: 32px;\n  text-transform: uppercase;\n  border-radius: 0 4px 4px 0;\n  border: 1px solid #c2c2c2;\n  border-left: none;\n  outline: none;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport Loader from 'components/Loader';\nimport { Form, SearchInput, SearchButton } from './SearchForm.styled';\n\nexport default function SearchForm({ onSubmit }) {\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <SearchInput name=\"query\" />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </Form>\n      <Loader open={false} />\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Pagination from 'components/Pagination';\nimport { Container } from '@mui/system';\nimport { getMovie } from 'services/movieAPI';\nimport SearchForm from 'components/SearchForm';\nimport MovieList from 'components/MovieList';\nimport Loader from 'components/Loader';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const page = searchParams.get('page') ?? 1;\n\n  useEffect(() => {\n    if (!query) {\n      setMovies(null);\n      setTotalPages(1);\n      return;\n    }\n\n    setLoading(true);\n    const fetchMovies = async () => {\n      try {\n        const res = await getMovie(`/search/movie?query=${query}&page=${page}`);\n\n        if (res?.results.length === 0) {\n          Notify.failure('Sorry, no movies found');\n          setMovies(null);\n          setTotalPages(1);\n          return;\n        }\n\n        setTotalPages(res?.total_pages);\n        setMovies(res?.results);\n      } catch (err) {\n        Notify.failure(`Error: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const query = form.elements.query.value.trim();\n\n    if (!query) {\n      Notify.warning('Enter the name of the movie, for a correct search!');\n      return;\n    }\n\n    setSearchParams({ query, page: 1 });\n    form.reset();\n  };\n\n  const handlePaginationChange = (_, value) => {\n    setSearchParams({ query, page: value });\n    window.scrollTo(0, 0);\n  };\n\n  const isNotEmptyList = movies?.length > 0;\n  const isPagination = totalPages > 1;\n\n  return (\n    <>\n      <Container sx={{ pt: 2, pb: 2 }}>\n        <SearchForm onSubmit={handleSubmit} />\n        {isNotEmptyList && <MovieList movies={movies} />}\n        {isPagination && (\n          <Pagination count={totalPages} onChange={handlePaginationChange} />\n        )}\n      </Container>\n      <Loader open={loading} />\n    </>\n  );\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Thumb","div","_templateObject2","Poster","img","_templateObject3","NoPoster","BsFilm","_templateObject4","MovieTitle","h2","_templateObject5","MovieScoreWrapper","_templateObject6","MovieScore","p","_templateObject7","MovieSubTitle","_templateObject8","MovieReview","_templateObject9","MovieGenre","_templateObject10","StyledLink","Link","_templateObject11","StyledNavLink","NavLink","_templateObject12","Item","li","Title","_ref","_movie$title","movie","location","useLocation","poster_path","imgSrc","concat","title","name","_jsx","children","_jsxs","to","id","state","from","src","alt","loading","MovieList","movies","map","MovieItem","PaginationWrapper","StyledPagination","Pagination","count","onChange","variant","shape","Form","form","SearchInput","input","SearchButton","button","SearchForm","onSubmit","_Fragment","type","Loader","open","Movies","_searchParams$get","_searchParams$get2","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","page","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getMovie","sent","results","length","Notify","failure","abrupt","total_pages","t0","message","finish","stop","apply","arguments","isNotEmptyList","isPagination","Container","sx","pt","pb","e","preventDefault","currentTarget","elements","value","trim","reset","warning","_","window","scrollTo"],"sourceRoot":""}