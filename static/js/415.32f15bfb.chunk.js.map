{"version":3,"file":"static/js/415.32f15bfb.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import { NavLink, Link } from 'react-router-dom';\nimport { BsFilm } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 8px 0;\n  margin: 8px 0;\n  display: flex;\n  gap: 16px;\n  border-top: 2px solid #c2c2c2;\n  border-bottom: 2px solid #c2c2c2;\n`;\n\nexport const Thumb = styled.div`\n  min-width: 260px;\n  min-height: 360px;\n  margin-right: 20px;\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Poster = styled.img`\n  max-width: 260px;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n  background-color: bisque;\n`;\n\nexport const NoPoster = styled(BsFilm)`\n  width: calc(100% - 150px);\n  height: auto;\n  object-fit: cover;\n  color: #c2c2c2;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const MovieScoreWrapper = styled.div`\n  padding: 16px 0;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const MovieScore = styled.p`\n  margin-right: 4px;\n  font-size: 18px;\n`;\n\nexport const MovieSubTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const MovieReview = styled.p`\n  margin-bottom: 16px;\n  text-align: justify;\n`;\n\nexport const MovieGenre = styled.p``;\n\nexport const StyledLink = styled(Link)`\n  max-width: 100px;\n  padding: 4px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: rgb(240, 240, 240);\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 500;\n  color: blue;\n\n  &.active {\n    color: tomato;\n  }\n`;\n","import styled from 'styled-components';\nimport { BsFilm } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  /* max-width: 288px; */\n  min-width: calc(100% / 5 - 10px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 2px 5px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n\n  &:hover img {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n  transition: transform 0.2s ease-in-out;\n`;\n\nexport const NoPoster = styled(BsFilm)`\n  width: 60%;\n  height: auto;\n  object-fit: cover;\n  color: #c2c2c2;\n`;\n\nexport const Title = styled.p`\n  padding: 8px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import { NoPoster } from 'components/MovieDetails/MovieDetails.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, StyledLink, Thumb, Poster, Title } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { poster_path } = movie;\n  const imgSrc = poster_path\n    ? `https://image.tmdb.org/t/p/w342${poster_path}`\n    : '';\n\n  const title = movie.title ?? movie.name;\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <Thumb>\n          {imgSrc ? (\n            <Poster src={imgSrc} alt={title} loading=\"lazy\" />\n          ) : (\n            <NoPoster />\n          )}\n        </Thumb>\n        <Title>{title}</Title>\n      </StyledLink>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 288px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 32px 16px;\n\n  @media (min-width: 475px) {\n    max-width: 600px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 768px) {\n    max-width: 900px;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media (min-width: 1024px) {\n    max-width: 100%;\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport MovieItem from '../MovieItem';\nimport { List } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { Container } from '@mui/material';\nimport Loader from 'components/Loader';\nimport TopMovieList from 'components/MovieList';\nimport { useFetchMovie } from 'hooks/useFetchMovie';\n\nexport default function App() {\n  const [movies, open, error] = useFetchMovie('/trending/all/day');\n  const isNotEmptyList = movies && movies.results.length > 0;\n\n  return (\n    <>\n      <Container sx={{ pt: 2, pb: 2 }}>\n        <h2>Trending today</h2>\n        {!open && !error && isNotEmptyList && (\n          <TopMovieList movies={movies.results} />\n        )}\n      </Container>\n      <Loader open={open} />\n    </>\n  );\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Thumb","div","_templateObject2","Poster","img","_templateObject3","NoPoster","BsFilm","_templateObject4","MovieTitle","h2","_templateObject5","MovieScoreWrapper","_templateObject6","MovieScore","p","_templateObject7","MovieSubTitle","_templateObject8","MovieReview","_templateObject9","MovieGenre","_templateObject10","StyledLink","Link","_templateObject11","StyledNavLink","NavLink","_templateObject12","Item","li","Title","_ref","_movie$title","movie","location","useLocation","poster_path","imgSrc","concat","title","name","_jsx","children","_jsxs","to","id","state","from","src","alt","loading","MovieList","movies","map","MovieItem","App","_useFetchMovie","useFetchMovie","_useFetchMovie2","_slicedToArray","open","error","isNotEmptyList","results","length","_Fragment","Container","sx","pt","pb","TopMovieList","Loader"],"sourceRoot":""}